<<<<<<< HEAD
### Type definitions saved at 2020-12-23T04:09:55.199Z ###
=======
### Type definitions saved at 2020-12-23T19:32:57.775Z ###
>>>>>>> dev

type File implements Node @dontInfer {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime: Date! @dateformat
  accessTime: Date! @dateformat
  changeTime: Date! @dateformat
  birthTime: Date! @dateformat
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime: Date! @dateformat
  mtime: Date! @dateformat
  ctime: Date! @dateformat
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
}

type Directory implements Node @dontInfer {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime: Date! @dateformat
  accessTime: Date! @dateformat
  changeTime: Date! @dateformat
  birthTime: Date! @dateformat
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime: Date! @dateformat
  mtime: Date! @dateformat
  ctime: Date! @dateformat
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
}

type Site implements Node @dontInfer {
  buildTime: Date @dateformat
  siteMetadata: SiteSiteMetadata
  port: Int
  host: String
  pathPrefix: String
  polyfill: Boolean
}

type SiteSiteMetadata {
  title: String
  description: String
}

type SitePage implements Node @dontInfer {
  path: String!
  component: String!
  internalComponentName: String!
  componentChunkName: String!
  matchPath: String
}

type MarkdownHeading {
  id: String
  value: String
  depth: Int
}

enum MarkdownHeadingLevels {
  h1
  h2
  h3
  h4
  h5
  h6
}

enum MarkdownExcerptFormats {
  PLAIN
  HTML
  MARKDOWN
}

type MarkdownWordCount {
  paragraphs: Int
  sentences: Int
  words: Int
}

type MarkdownRemark implements Node @childOf(mimeTypes: ["text/markdown", "text/x-markdown"], types: [], many: false) @derivedTypes @dontInfer {
  frontmatter: MarkdownRemarkFrontmatter
  excerpt: String
  rawMarkdownBody: String
}

type MarkdownRemarkFrontmatter {
  title: String
}

enum ImageFormat {
  NO_CHANGE
  JPG
  PNG
  WEBP
}

enum ImageFit {
  COVER
  CONTAIN
  FILL
  INSIDE
  OUTSIDE
}

enum ImageCropFocus {
  CENTER
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  ENTROPY
  ATTENTION
}

input DuotoneGradient {
  highlight: String!
  shadow: String!
  opacity: Int
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_WHITE
  TURNPOLICY_LEFT
  TURNPOLICY_RIGHT
  TURNPOLICY_MINORITY
  TURNPOLICY_MAJORITY
}

input Potrace {
  turnPolicy: PotraceTurnPolicy
  turdSize: Float
  alphaMax: Float
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  blackOnWhite: Boolean
  color: String
  background: String
}

type ImageSharp implements Node @childOf(types: ["File"]) @dontInfer {
  fixed(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpFixed
  resolutions(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResolutions @deprecated(reason: "Resolutions was deprecated in Gatsby v2. It's been renamed to \"fixed\" https://example.com/write-docs-and-fix-this-example-link")
  fluid(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = NO_CHANGE
    toFormatBase64: ImageFormat = NO_CHANGE
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
    sizes: String = ""

    """
    A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    """
    srcSetBreakpoints: [Int] = []
  ): ImageSharpFluid
  sizes(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = NO_CHANGE
    toFormatBase64: ImageFormat = NO_CHANGE
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
    sizes: String = ""

    """
    A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    """
    srcSetBreakpoints: [Int] = []
  ): ImageSharpSizes @deprecated(reason: "Sizes was deprecated in Gatsby v2. It's been renamed to \"fluid\" https://example.com/write-docs-and-fix-this-example-link")
  original: ImageSharpOriginal
  resize(width: Int, height: Int, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, base64: Boolean = false, traceSVG: Potrace, toFormat: ImageFormat = NO_CHANGE, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResize
}

type ImageSharpFixed {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

type ImageSharpResolutions {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

type ImageSharpFluid {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int!
  presentationHeight: Int!
}

type ImageSharpSizes {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int!
  presentationHeight: Int!
}

type ImageSharpOriginal {
  width: Float
  height: Float
  src: String
}

type ImageSharpResize {
  src: String
  tracedSVG: String
  width: Int
  height: Int
  aspectRatio: Float
  originalName: String
}

<<<<<<< HEAD
=======
type contentfulTeamMemberBioTextNode implements Node @derivedTypes @dontInfer {
  bio: String
  sys: contentfulTeamMemberBioTextNodeSys
}

type contentfulTeamMemberBioTextNodeSys {
  type: String
}

>>>>>>> dev
type contentfulNewsletterDescriptionTextNode implements Node @derivedTypes @dontInfer {
  description: String
  sys: contentfulNewsletterDescriptionTextNodeSys
}

type contentfulNewsletterDescriptionTextNodeSys {
  type: String
}

type contentfulAlumniPageDescriptionTextNode implements Node @derivedTypes @dontInfer {
  description: String
  sys: contentfulAlumniPageDescriptionTextNodeSys
}

type contentfulAlumniPageDescriptionTextNodeSys {
  type: String
}

type contentfulInvolvedInvestorPageDescriptionTextNode implements Node @derivedTypes @dontInfer {
  description: String
  sys: contentfulInvolvedInvestorPageDescriptionTextNodeSys
}

type contentfulInvolvedInvestorPageDescriptionTextNodeSys {
  type: String
}

type contentfulInvolvedStudentPageDescriptionTextNode implements Node @derivedTypes @dontInfer {
  description: String
  sys: contentfulInvolvedStudentPageDescriptionTextNodeSys
}

type contentfulInvolvedStudentPageDescriptionTextNodeSys {
  type: String
}

type contentfulInvolvedVenturePageDescriptionTextNode implements Node @derivedTypes @dontInfer {
  description: String
  sys: contentfulInvolvedVenturePageDescriptionTextNodeSys
}

type contentfulInvolvedVenturePageDescriptionTextNodeSys {
  type: String
}

type contentfulTeamPageShortDescriptionTextNode implements Node @derivedTypes @dontInfer {
  shortDescription: String
  sys: contentfulTeamPageShortDescriptionTextNodeSys
}

type contentfulTeamPageShortDescriptionTextNodeSys {
  type: String
}

type contentfulVentureDescriptionTextNode implements Node @derivedTypes @dontInfer {
  description: String
  sys: contentfulVentureDescriptionTextNodeSys
}

type contentfulVentureDescriptionTextNodeSys {
  type: String
}

type contentfulAdvisorBioTextNode implements Node @derivedTypes @dontInfer {
  bio: String
  sys: contentfulAdvisorBioTextNodeSys
}

type contentfulAdvisorBioTextNodeSys {
  type: String
}

type contentfulInvolvedPageStudentBlockDescriptionTextNode implements Node @derivedTypes @dontInfer {
  studentBlockDescription: String
  sys: contentfulInvolvedPageStudentBlockDescriptionTextNodeSys
}

type contentfulInvolvedPageStudentBlockDescriptionTextNodeSys {
  type: String
}

type contentfulInvolvedPageInvestorBlockDescriptionTextNode implements Node @derivedTypes @dontInfer {
  investorBlockDescription: String
  sys: contentfulInvolvedPageInvestorBlockDescriptionTextNodeSys
}

type contentfulInvolvedPageInvestorBlockDescriptionTextNodeSys {
  type: String
}

type contentfulInvolvedPageVentureBlockDescriptionTextNode implements Node @derivedTypes @dontInfer {
  ventureBlockDescription: String
  sys: contentfulInvolvedPageVentureBlockDescriptionTextNodeSys
}

type contentfulInvolvedPageVentureBlockDescriptionTextNodeSys {
  type: String
}

type ContentfulAsset implements Node @derivedTypes @dontInfer {
  contentful_id: String
  spaceId: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  file: ContentfulAssetFile
  title: String
  description: String
  node_locale: String
  sys: ContentfulAssetSys
}

type ContentfulAssetFile @derivedTypes {
  url: String
  details: ContentfulAssetFileDetails
  fileName: String
  contentType: String
}

type ContentfulAssetFileDetails @derivedTypes {
  size: Int
  image: ContentfulAssetFileDetailsImage
}

type ContentfulAssetFileDetailsImage {
  width: Int
  height: Int
}

type ContentfulAssetSys {
  type: String
  revision: Int
}

type ContentfulContactInformation implements Node @derivedTypes @dontInfer {
  email: String
  instagramLink: String
  linkedInLink: String
  mediumLink: String
  contact_page: [ContentfulContactPage] @link(by: "id", from: "contact page___NODE") @proxy(from: "contact page___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulContactInformationSys
  node_locale: String
}

type ContentfulContactPage implements Node @derivedTypes @dontInfer {
  headline: String
  tagline: String
  emailHeader: String
  emailDescription: String
  linkedInHeader: String
  linkedInDescription: String
  newsletterHeader: String
  newsletterDescription: String
  socialMediaHeader: String
  socialMediaDescription: String
  faqHeader: String
  featuredNewsletter: ContentfulNewsletter @link(by: "id", from: "featuredNewsletter___NODE")
  contactInformationLinks: ContentfulContactInformation @link(by: "id", from: "contactInformationLinks___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulContactPageSys
  node_locale: String
}

type ContentfulNewsletter implements Node @derivedTypes @dontInfer {
  title: String
  publicationDate: Date @dateformat
  newsletterFile: ContentfulAsset @link(by: "id", from: "newsletterFile___NODE")
  explore_page: [ContentfulExplorePage] @link(by: "id", from: "explore page___NODE") @proxy(from: "explore page___NODE")
  contact_page: [ContentfulContactPage] @link(by: "id", from: "contact page___NODE") @proxy(from: "contact page___NODE")
  description: contentfulNewsletterDescriptionTextNode @link(by: "id", from: "description___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulNewsletterSys
  node_locale: String
}

type ContentfulExplorePage implements Node @derivedTypes @dontInfer {
  headline: String
  newsletterHeader: String
  newsletterSubheader: String
  venturesAndInvestorsHeader: String
  venturesAndInvestorsSubheader: String
  studentsHeader: String
  studentsSubheader: String
  noEventsMessage: String
  blogButtonHeader: String
  blogButtonLabel: String
  featuredNewsletter: ContentfulNewsletter @link(by: "id", from: "featuredNewsletter___NODE")
  upcomingEvents: [ContentfulEvent] @link(by: "id", from: "upcomingEvents___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulExplorePageSys
  node_locale: String
}

type ContentfulEvent implements Node @derivedTypes @dontInfer {
  title: String
  date: Date @dateformat
  startTime: String
  endTime: String
  location: String
  hostName: String
  registrationLink: String
  photo: ContentfulAsset @link(by: "id", from: "photo___NODE")
  home_page: [ContentfulHomePage] @link(by: "id", from: "home page___NODE") @proxy(from: "home page___NODE")
  explore_page: [ContentfulExplorePage] @link(by: "id", from: "explore page___NODE") @proxy(from: "explore page___NODE")
  description: contentfulEventDescriptionTextNode @link(by: "id", from: "description___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulEventSys
  node_locale: String
}

type ContentfulHomePage implements Node @derivedTypes @dontInfer {
  headline: String
  tagline: String
  missionStatementHeader: String
  missionStatementSubheader: String
  statisticsHeader: String
  statisticsButtonLabel: String
  eventHeader: String
  testimonialsHeader: String
  heroImage: ContentfulAsset @link(by: "id", from: "heroImage___NODE")
  missionStatement: ContentfulResource @link(by: "id", from: "missionStatement___NODE")
  stats: [ContentfulStatistic] @link(by: "id", from: "stats___NODE")
  event: ContentfulEvent @link(by: "id", from: "event___NODE")
  testimonials: [ContentfulTestimonial] @link(by: "id", from: "testimonials___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulHomePageSys
  node_locale: String
}

type ContentfulResource implements Node @derivedTypes @dontInfer {
  key: String
  involved_investor_page: [ContentfulInvolvedInvestorPage] @link(by: "id", from: "involved investor page___NODE") @proxy(from: "involved investor page___NODE")
  value: contentfulResourceValueTextNode @link(by: "id", from: "value___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulResourceSys
  node_locale: String
  involved_venture_page: [ContentfulInvolvedVenturePage] @link(by: "id", from: "involved venture page___NODE") @proxy(from: "involved venture page___NODE")
  home_page: [ContentfulHomePage] @link(by: "id", from: "home page___NODE") @proxy(from: "home page___NODE")
  footer: [ContentfulFooter] @link(by: "id", from: "footer___NODE")
  resource_set: [ContentfulResourceSet] @link(by: "id", from: "resource set___NODE") @proxy(from: "resource set___NODE")
}

type ContentfulInvolvedInvestorPage implements Node @derivedTypes @dontInfer {
  headline: String
  benefitsHeader: String
  processHeader: String
  processShortDescription: String
  step1Header: String
  step1Description: String
  step2Header: String
  step2Description: String
  step3Header: String
  step3Description: String
  applyButtonHeader: String
  applyButtonLabel: String
  pastVenturesHeader: String
  finalCTAHeader: String
  finalCTADescription: String
  titleImage: ContentfulAsset @link(by: "id", from: "titleImage___NODE")
  benefitsList: [ContentfulResource] @link(by: "id", from: "benefitsList___NODE")
  ventureShowcase: [ContentfulVenture] @link(by: "id", from: "ventureShowcase___NODE")
  description: contentfulInvolvedInvestorPageDescriptionTextNode @link(by: "id", from: "description___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulInvolvedInvestorPageSys
  node_locale: String
}

type ContentfulVenture implements Node @derivedTypes @dontInfer {
  name: String
  shortTagline: String
  year: String
  website: String
  logo: ContentfulAsset @link(by: "id", from: "logo___NODE")
  portfolio_page: [ContentfulPortfolioPage] @link(by: "id", from: "portfolio page___NODE") @proxy(from: "portfolio page___NODE")
  involved_venture_page: [ContentfulInvolvedVenturePage] @link(by: "id", from: "involved venture page___NODE") @proxy(from: "involved venture page___NODE")
  involved_student_page: [ContentfulInvolvedStudentPage] @link(by: "id", from: "involved student page___NODE") @proxy(from: "involved student page___NODE")
  involved_investor_page: [ContentfulInvolvedInvestorPage] @link(by: "id", from: "involved investor page___NODE") @proxy(from: "involved investor page___NODE")
  description: contentfulVentureDescriptionTextNode @link(by: "id", from: "description___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulVentureSys
  node_locale: String
}

type ContentfulPortfolioPage implements Node @derivedTypes @dontInfer {
  headline: String
  shortDescription: String
  featuredSubheader: String
  pastVenturesSubheader: String
  featuredVentures: [ContentfulVenture] @link(by: "id", from: "featuredVentures___NODE")
  pastVentures: [ContentfulVenture] @link(by: "id", from: "pastVentures___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulPortfolioPageSys
  node_locale: String
}

type ContentfulPortfolioPageSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulPortfolioPageSysContentType
}

type ContentfulPortfolioPageSysContentType @derivedTypes {
  sys: ContentfulPortfolioPageSysContentTypeSys
}

type ContentfulPortfolioPageSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulInvolvedVenturePage implements Node @derivedTypes @dontInfer {
  headline: String
  processHeader: String
  processShortDescription: String
  step1Header: String
  step1Description: String
  step2Header: String
  step2Description: String
  step3Header: String
  step3Description: String
  requirementsHeader: String
  requirementsDescription: String
  applyButtonHeader: String
  applyButtonLabel: String
  applyButtonLink: String
  pastVenturesHeader: String
  finalCTAHeader: String
  finalCTADescription: String
  titleImage: ContentfulAsset @link(by: "id", from: "titleImage___NODE")
  requirementsList: [ContentfulResource] @link(by: "id", from: "requirementsList___NODE")
  ventureShowcase: [ContentfulVenture] @link(by: "id", from: "ventureShowcase___NODE")
  description: contentfulInvolvedVenturePageDescriptionTextNode @link(by: "id", from: "description___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulInvolvedVenturePageSys
  node_locale: String
}

type ContentfulInvolvedVenturePageSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulInvolvedVenturePageSysContentType
}

type ContentfulInvolvedVenturePageSysContentType @derivedTypes {
  sys: ContentfulInvolvedVenturePageSysContentTypeSys
}

type ContentfulInvolvedVenturePageSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulInvolvedStudentPage implements Node @derivedTypes @dontInfer {
  headline: String
  processHeader: String
  processShortDescription: String
  step1Header: String
  step1Description: String
  step2Header: String
  step2Description: String
  step3Header: String
  step3Description: String
  requirementsHeader: String
  requirementsDescription: String
  applyButtonHeader: String
  applyButtonLabel: String
  applyButtonLink: String
  pastVenturesHeader: String
  finalCTAHeader: String
  finalCTADescription: String
  titleImage: ContentfulAsset @link(by: "id", from: "titleImage___NODE")
  ventureShowcase: [ContentfulVenture] @link(by: "id", from: "ventureShowcase___NODE")
  description: contentfulInvolvedStudentPageDescriptionTextNode @link(by: "id", from: "description___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulInvolvedStudentPageSys
  node_locale: String
}

type ContentfulInvolvedStudentPageSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulInvolvedStudentPageSysContentType
}

type ContentfulInvolvedStudentPageSysContentType @derivedTypes {
  sys: ContentfulInvolvedStudentPageSysContentTypeSys
}

type ContentfulInvolvedStudentPageSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulVentureSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulVentureSysContentType
}

type ContentfulVentureSysContentType @derivedTypes {
  sys: ContentfulVentureSysContentTypeSys
}

type ContentfulVentureSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulInvolvedInvestorPageSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulInvolvedInvestorPageSysContentType
}

type ContentfulInvolvedInvestorPageSysContentType @derivedTypes {
  sys: ContentfulInvolvedInvestorPageSysContentTypeSys
}

type ContentfulInvolvedInvestorPageSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type contentfulResourceValueTextNode implements Node @derivedTypes @dontInfer {
  value: String
  sys: contentfulResourceValueTextNodeSys
}

type contentfulResourceValueTextNodeSys {
  type: String
}

type ContentfulResourceSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulResourceSysContentType
}

type ContentfulResourceSysContentType @derivedTypes {
  sys: ContentfulResourceSysContentTypeSys
}

type ContentfulResourceSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulFooter implements Node @derivedTypes @dontInfer {
  descriptionAboutHan: String
  affiliationText: String
  hanLogo: ContentfulAsset @link(by: "id", from: "hanLogo___NODE")
  socialMediaReferences: [ContentfulResource] @link(by: "id", from: "socialMediaReferences___NODE")
  emailAddress: ContentfulResource @link(by: "id", from: "emailAddress___NODE")
  damoreMcKimLogo: ContentfulAsset @link(by: "id", from: "damoreMcKimLogo___NODE")
  mosaicLogo: ContentfulAsset @link(by: "id", from: "mosaicLogo___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulFooterSys
  node_locale: String
}

type ContentfulFooterSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulFooterSysContentType
}

type ContentfulFooterSysContentType @derivedTypes {
  sys: ContentfulFooterSysContentTypeSys
}

type ContentfulFooterSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulResourceSet implements Node @derivedTypes @dontInfer {
  name: String
  resources: [ContentfulImageResourceContentfulResourceContentfulResourceSetUnion] @link(by: "id", from: "resources___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulResourceSetSys
  node_locale: String
  resource_set: [ContentfulResourceSet] @link(by: "id", from: "resource set___NODE") @proxy(from: "resource set___NODE")
}

union ContentfulImageResourceContentfulResourceContentfulResourceSetUnion = ContentfulImageResource | ContentfulResource | ContentfulResourceSet

type ContentfulResourceSetSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulResourceSetSysContentType
}

type ContentfulResourceSetSysContentType @derivedTypes {
  sys: ContentfulResourceSetSysContentTypeSys
}

type ContentfulResourceSetSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulStatistic implements Node @derivedTypes @dontInfer {
  number: String
  description: String
  home_page: [ContentfulHomePage] @link(by: "id", from: "home page___NODE") @proxy(from: "home page___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulStatisticSys
  node_locale: String
}

type ContentfulStatisticSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulStatisticSysContentType
}

type ContentfulStatisticSysContentType @derivedTypes {
  sys: ContentfulStatisticSysContentTypeSys
}

type ContentfulStatisticSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulTestimonial implements Node @derivedTypes @dontInfer {
  name: String
  company: String
  companyWebsite: String
  profilePicture: ContentfulAsset @link(by: "id", from: "profilePicture___NODE")
  home_page: [ContentfulHomePage] @link(by: "id", from: "home page___NODE") @proxy(from: "home page___NODE")
  testimonial: contentfulTestimonialTestimonialTextNode @link(by: "id", from: "testimonial___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulTestimonialSys
  node_locale: String
}

type contentfulTestimonialTestimonialTextNode implements Node @derivedTypes @dontInfer {
  testimonial: String
  sys: contentfulTestimonialTestimonialTextNodeSys
}

type contentfulTestimonialTestimonialTextNodeSys {
  type: String
}

type ContentfulTestimonialSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulTestimonialSysContentType
}

type ContentfulTestimonialSysContentType @derivedTypes {
  sys: ContentfulTestimonialSysContentTypeSys
}

type ContentfulTestimonialSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulHomePageSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulHomePageSysContentType
}

type ContentfulHomePageSysContentType @derivedTypes {
  sys: ContentfulHomePageSysContentTypeSys
}

type ContentfulHomePageSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type contentfulEventDescriptionTextNode implements Node @derivedTypes @dontInfer {
  description: String
  sys: contentfulEventDescriptionTextNodeSys
}

type contentfulEventDescriptionTextNodeSys {
  type: String
}

type ContentfulEventSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulEventSysContentType
}

type ContentfulEventSysContentType @derivedTypes {
  sys: ContentfulEventSysContentTypeSys
}

type ContentfulEventSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulExplorePageSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulExplorePageSysContentType
}

type ContentfulExplorePageSysContentType @derivedTypes {
  sys: ContentfulExplorePageSysContentTypeSys
}

type ContentfulExplorePageSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulNewsletterSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulNewsletterSysContentType
}

type ContentfulNewsletterSysContentType @derivedTypes {
  sys: ContentfulNewsletterSysContentTypeSys
}

type ContentfulNewsletterSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulContactPageSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulContactPageSysContentType
}

type ContentfulContactPageSysContentType @derivedTypes {
  sys: ContentfulContactPageSysContentTypeSys
}

type ContentfulContactPageSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulContactInformationSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulContactInformationSysContentType
}

type ContentfulContactInformationSysContentType @derivedTypes {
  sys: ContentfulContactInformationSysContentTypeSys
}

type ContentfulContactInformationSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulAdvisorPage implements Node @derivedTypes @dontInfer {
  advisorHeadline: String
  advisors: [ContentfulAdvisor] @link(by: "id", from: "advisors___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulAdvisorPageSys
  node_locale: String
}

type ContentfulAdvisor implements Node @derivedTypes @dontInfer {
  name: String
  linkedIn: String
  profilePicture: ContentfulAsset @link(by: "id", from: "profilePicture___NODE")
  advisor_page: [ContentfulAdvisorPage] @link(by: "id", from: "advisor page___NODE") @proxy(from: "advisor page___NODE")
  bio: contentfulAdvisorBioTextNode @link(by: "id", from: "bio___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulAdvisorSys
  node_locale: String
}

type ContentfulAdvisorSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulAdvisorSysContentType
}

type ContentfulAdvisorSysContentType @derivedTypes {
  sys: ContentfulAdvisorSysContentTypeSys
}

type ContentfulAdvisorSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulAdvisorPageSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulAdvisorPageSysContentType
}

type ContentfulAdvisorPageSysContentType @derivedTypes {
  sys: ContentfulAdvisorPageSysContentTypeSys
}

type ContentfulAdvisorPageSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulFaqPage implements Node @derivedTypes @dontInfer {
  headline: String
  category1Label: String
  category2Label: String
  category3Label: String
  finalCTAHeader: String
  finalCTADescription: String
  category1Questions: [ContentfulFaq] @link(by: "id", from: "category1Questions___NODE")
  category2Questions: [ContentfulFaq] @link(by: "id", from: "category2Questions___NODE")
  category3Questions: [ContentfulFaq] @link(by: "id", from: "category3Questions___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulFaqPageSys
  node_locale: String
}

type ContentfulFaq implements Node @derivedTypes @dontInfer {
  question: String
  faq_page: [ContentfulFaqPage] @link(by: "id", from: "faq page___NODE") @proxy(from: "faq page___NODE")
  answer: contentfulFaqAnswerTextNode @link(by: "id", from: "answer___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulFaqSys
  node_locale: String
}

type contentfulFaqAnswerTextNode implements Node @derivedTypes @dontInfer {
  answer: String
  sys: contentfulFaqAnswerTextNodeSys
}

type contentfulFaqAnswerTextNodeSys {
  type: String
}

type ContentfulFaqSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulFaqSysContentType
}

type ContentfulFaqSysContentType @derivedTypes {
  sys: ContentfulFaqSysContentTypeSys
}

type ContentfulFaqSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulFaqPageSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulFaqPageSysContentType
}

type ContentfulFaqPageSysContentType @derivedTypes {
  sys: ContentfulFaqPageSysContentTypeSys
}

type ContentfulFaqPageSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulImageResource implements Node @derivedTypes @dontInfer {
  key: String
  image: ContentfulAsset @link(by: "id", from: "image___NODE")
  resource_set: [ContentfulResourceSet] @link(by: "id", from: "resource set___NODE") @proxy(from: "resource set___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulImageResourceSys
  node_locale: String
}

type ContentfulImageResourceSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulImageResourceSysContentType
}

type ContentfulImageResourceSysContentType @derivedTypes {
  sys: ContentfulImageResourceSysContentTypeSys
}

type ContentfulImageResourceSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulInvolvedPage implements Node @derivedTypes @dontInfer {
  headline: String
  ventureBlockHeading: String
  investorBlockHeading: String
  studentBlockHeading: String
  ventureImage: ContentfulAsset @link(by: "id", from: "ventureImage___NODE")
  investorImage: ContentfulAsset @link(by: "id", from: "investorImage___NODE")
  studentImage: ContentfulAsset @link(by: "id", from: "studentImage___NODE")
  ventureBlockDescription: contentfulInvolvedPageVentureBlockDescriptionTextNode @link(by: "id", from: "ventureBlockDescription___NODE")
  investorBlockDescription: contentfulInvolvedPageInvestorBlockDescriptionTextNode @link(by: "id", from: "investorBlockDescription___NODE")
  studentBlockDescription: contentfulInvolvedPageStudentBlockDescriptionTextNode @link(by: "id", from: "studentBlockDescription___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulInvolvedPageSys
  node_locale: String
}

type ContentfulInvolvedPageSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulInvolvedPageSysContentType
}

type ContentfulInvolvedPageSysContentType @derivedTypes {
  sys: ContentfulInvolvedPageSysContentTypeSys
}

type ContentfulInvolvedPageSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulAlumniPage implements Node @derivedTypes @dontInfer {
  alumniHeader: String
  alumni: [ContentfulAlumni] @link(by: "id", from: "alumni___NODE")
  description: contentfulAlumniPageDescriptionTextNode @link(by: "id", from: "description___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulAlumniPageSys
  node_locale: String
}

type ContentfulAlumni implements Node @derivedTypes @dontInfer {
  name: String
  yearInHan: Int
  linkedIn: String
  currentCompany: String
  currentCompanyLink: String
  profilePicture: ContentfulAsset @link(by: "id", from: "profilePicture___NODE")
  alumni_page: [ContentfulAlumniPage] @link(by: "id", from: "alumni page___NODE") @proxy(from: "alumni page___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulAlumniSys
  node_locale: String
}

type ContentfulAlumniSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulAlumniSysContentType
}

type ContentfulAlumniSysContentType @derivedTypes {
  sys: ContentfulAlumniSysContentTypeSys
}

type ContentfulAlumniSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulAlumniPageSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulAlumniPageSysContentType
}

type ContentfulAlumniPageSysContentType @derivedTypes {
  sys: ContentfulAlumniPageSysContentTypeSys
}

type ContentfulAlumniPageSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulTeamPage implements Node @derivedTypes @dontInfer {
  teamHeadline: String
  teamMembers: [ContentfulTeamMember] @link(by: "id", from: "teamMembers___NODE")
  shortDescription: contentfulTeamPageShortDescriptionTextNode @link(by: "id", from: "shortDescription___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulTeamPageSys
  node_locale: String
}

type ContentfulTeamMember implements Node @derivedTypes @dontInfer {
  name: String
  title: String
  linkedIn: String
  profilePicture: ContentfulAsset @link(by: "id", from: "profilePicture___NODE")
  alternateProfilePicture: ContentfulAsset @link(by: "id", from: "alternateProfilePicture___NODE")
  team_page: [ContentfulTeamPage] @link(by: "id", from: "team page___NODE") @proxy(from: "team page___NODE")
  bio: contentfulTeamMemberBioTextNode @link(by: "id", from: "bio___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulTeamMemberSys
  node_locale: String
}

type ContentfulTeamMemberSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulTeamMemberSysContentType
}

type ContentfulTeamMemberSysContentType @derivedTypes {
  sys: ContentfulTeamMemberSysContentTypeSys
}

type ContentfulTeamMemberSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulTeamPageSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulTeamPageSysContentType
}

type ContentfulTeamPageSysContentType @derivedTypes {
  sys: ContentfulTeamPageSysContentTypeSys
}

type ContentfulTeamPageSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type contentfulBlogPostBodyTextNode implements Node @derivedTypes @dontInfer {
  body: String
  sys: contentfulBlogPostBodyTextNodeSys
}

type contentfulBlogPostBodyTextNodeSys {
  type: String
}

type contentfulBlogPostDescriptionTextNode implements Node @derivedTypes @dontInfer {
  description: String
  sys: contentfulBlogPostDescriptionTextNodeSys
}

type contentfulBlogPostDescriptionTextNodeSys {
  type: String
}

type ContentfulBlogPost implements Node @derivedTypes @dontInfer {
  title: String
  slug: String
  publishDate: Date @dateformat
  tags: [String]
  heroImage: ContentfulAsset @link(by: "id", from: "heroImage___NODE")
  author: ContentfulPerson @link(by: "id", from: "author___NODE")
  description: contentfulBlogPostDescriptionTextNode @link(by: "id", from: "description___NODE")
  body: contentfulBlogPostBodyTextNode @link(by: "id", from: "body___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulBlogPostSys
  node_locale: String
}

type ContentfulPerson implements Node @derivedTypes @dontInfer {
  name: String
  title: String
  company: String
  email: String
  phone: String
  facebook: String
  twitter: String
  github: String
  image: ContentfulAsset @link(by: "id", from: "image___NODE")
  blog_post: [ContentfulBlogPost] @link(by: "id", from: "blog post___NODE") @proxy(from: "blog post___NODE")
  shortBio: contentfulPersonShortBioTextNode @link(by: "id", from: "shortBio___NODE")
  spaceId: String
  contentful_id: String
  createdAt: Date @dateformat
  updatedAt: Date @dateformat
  sys: ContentfulPersonSys
  node_locale: String
}

type contentfulPersonShortBioTextNode implements Node @derivedTypes @dontInfer {
  shortBio: String
  sys: contentfulPersonShortBioTextNodeSys
}

type contentfulPersonShortBioTextNodeSys {
  type: String
}

type ContentfulPersonSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulPersonSysContentType
}

type ContentfulPersonSysContentType @derivedTypes {
  sys: ContentfulPersonSysContentTypeSys
}

type ContentfulPersonSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulBlogPostSys @derivedTypes {
  type: String
  revision: Int
  contentType: ContentfulBlogPostSysContentType
}

type ContentfulBlogPostSysContentType @derivedTypes {
  sys: ContentfulBlogPostSysContentTypeSys
}

type ContentfulBlogPostSysContentTypeSys {
  type: String
  linkType: String
  id: String
  contentful_id: String
}

type ContentfulContentType implements Node @derivedTypes @dontInfer {
  name: String
  displayField: String
  description: String
  sys: ContentfulContentTypeSys
}

type ContentfulContentTypeSys {
  type: String
}